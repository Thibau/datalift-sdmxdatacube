<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
  xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
      http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
      http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

  <bean id="serviceprops" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <list>
        <value>classpath:service.properties</value>
      </list>
    </property>
    <property name="ignoreUnresolvablePlaceholders" value="true"/>
  </bean>

  <!-- creates a java.util.Properties instance with values loaded from the supplied location -->
  <util:properties id="knownUriList" location="classpath:sdmx-urn-to-rdf-uri.properties"/>
  <util:properties id="uriTemaplate" location="classpath:rdf_uri_template.properties"/>

  <context:spring-configured />
  <context:annotation-config />

  <!-- This scans all of the classes to find Spring beans annotations and use them to initialize beans. -->
  <context:component-scan base-package="org.sdmxsource" />

  <!-- This is our main bean, which will employ all of the others. Also the sole reason to use Spring. -->
  <bean id="rdfDataTransformer" class="org.datalift.sdmxdatacube.SDMXDataCubeTransformer" />

  <bean id="readableDataLocationFactory" class="org.sdmxsource.util.factory.SdmxSourceReadableDataLocationFactory" />
  <bean id="writeableDataLocationFactory" class="org.sdmxsource.util.factory.SdmxSourceWriteableDataLocationFactory" />

  <!-- THIS IS REQUIRED WHEN THE RDF DATA STRUCTURE WRITER HAS TO RESOLVE THE CONCEPT REFERENCES -->
  <bean id="identifiableRetrievalManager" class="org.sdmxsource.sdmx.structureretrieval.manager.IdentifiableRetrievalManagerImpl">
    <constructor-arg ref="inMemRetMan" />
  </bean>

  <bean id="inMemRetMan" class="org.sdmxsource.sdmx.structureretrieval.manager.InMemoryRetrievalManager" />

  <!-- WRITER ENGINES (DATA) -->
  <bean id="rdfDataWriterEngine" class="org.sdmxsource.rdf.engine.data.RDFDataWriterEngine" scope="prototype">
    <property name="rdfDataURIManager" ref="rdfDataURIManagerRESTSyntax" />
    <property name="rdfUriManager" ref="propFileRdfResolver" />
  </bean>


  <!-- WRITER ENGINES (STRUCTURE) -->
  <bean id="rdfStructureWriterEngine" scope="prototype" class="org.sdmxsource.rdf.engine.structure.RDFStructureWriterEngine">
    <property name="uriResolver" ref="propFileRdfResolver" />
  </bean>

  <bean id="rdfWriter" class="org.sdmxsource.rdf.engine.structure.specific.RDFAbstractWriterEngine" abstract="true">
    <property name="uriResolver" ref="propFileRdfResolver" />
  </bean>

  <bean id="dsdRDFWriter" class="org.sdmxsource.rdf.engine.structure.specific.RDFDataStructureWriterEngine" parent="rdfWriter">
    <property name="identifiableRetrievalManager" ref="identifiableRetrievalManager" />
  </bean>

  <bean id="codelistRdfWriter" class="org.sdmxsource.rdf.engine.structure.specific.RDFCodelistWriterEngine" parent="rdfWriter" />
  <bean id="conceptSchemeRdfWriter" class="org.sdmxsource.rdf.engine.structure.specific.RDFConceptSchemeWriterEngine" parent="rdfWriter" />


    <!-- URI RESOLVERS (STRUCTURE) -->
  <bean id="propFileRdfResolver" class="org.sdmxsource.rdf.manager.impl.PropsFileRDFUriManager">
    <property name="rdfUriResolver" ref="agencyTemplateURIResolver" />
    <property name="properties" ref="knownUriList" />
  </bean>

  <bean id="agencyTemplateURIResolver" class="org.sdmxsource.rdf.manager.impl.AgencyTemplateURIManager">
    <property name="rdfUriResolver" ref="genericURIResolver" />
    <property name="properties" ref="uriTemaplate" />
  </bean>

  <bean id="genericURIResolver" class="org.sdmxsource.rdf.manager.impl.GenericRDFUriManager" >
    <property name="baseUrl" value="${service.url}"></property>
  </bean>

  <!-- URI RESOLVERS (DATA) -->
  <bean id="rdfDataURIManagerRESTSyntax" class="org.sdmxsource.rdf.manager.impl.RDFDataURIManagerRESTSyntax">
    <property name="serviceUrl" value="${service.url}" />
  </bean>
</beans>
